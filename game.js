// === –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ localStorage ===
const DISPLAY_MULTIPLIER = 1e8;
let realScore = parseInt(localStorage.getItem("score")) || 0;
let level = parseInt(localStorage.getItem("level")) || 1;

// === –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ ===
function displayScore(score) {
    document.getElementById("score").innerText = (score / DISPLAY_MULTIPLIER).toFixed(8);
}

document.getElementById("level").innerText = level;
displayScore(realScore);

// === –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—Ç–∞–≤–∫–∞ ===
let fixedBet = localStorage.getItem("fixedBet") ? parseFloat(localStorage.getItem("fixedBet")) : null;

// === –§—É–Ω–∫—Ü–∏—è —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–æ–π —Å—Ç–∞–≤–∫–∏ ===
function setFixedBet() {
    const input = document.getElementById("fixedBetInput");
    const value = parseFloat(input.value);

    if (isNaN(value) || value <= 0) {
        alert("–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Å—É–º–º—É —Å—Ç–∞–≤–∫–∏!");
        return;
    }

    fixedBet = value;
    localStorage.setItem("fixedBet", fixedBet);
    showNotification(`–°—Ç–∞–≤–∫–∞ –∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–∞: ${fixedBet.toFixed(8)} CT`);
}

// === –ò–≥—Ä–∞ "–ö–∞–º–µ–Ω—å-–ù–æ–∂–Ω–∏—Ü—ã-–ë—É–º–∞–≥–∞" ===
function playGame(playerChoice) {
    const input = document.getElementById("betAmount");
    let betValue;

    if (fixedBet !== null && fixedBet > 0) {
        betValue = fixedBet;
        input.value = fixedBet.toFixed(8);
    } else {
        betValue = parseFloat(input.value);
    }

    if (isNaN(betValue) || betValue <= 0) {
        alert("–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Å—É–º–º—É —Å—Ç–∞–≤–∫–∏!");
        return;
    }

    const betInCoins = Math.floor(betValue * DISPLAY_MULTIPLIER);

    if (betInCoins < 100) {
        alert("–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—Ç–∞–≤–∫–∞: 0.00000100 CT");
        return;
    }

    if (realScore < betInCoins) {
        alert("–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –¥–ª—è —Å—Ç–∞–≤–∫–∏!");
        return;
    }

    const choices = ['rock', 'paper', 'scissors'];
    const computerChoice = choices[Math.floor(Math.random() * choices.length)];

    let resultText = "";
    let change = 0;

    if (playerChoice === computerChoice) {
        resultText = `It's a draw! You both chose ${playerChoice}`;
    } else if (
        (playerChoice === 'rock' && computerChoice === 'scissors') ||
        (playerChoice === 'paper' && computerChoice === 'rock') ||
        (playerChoice === 'scissors' && computerChoice === 'paper')
    ) {
        change = betInCoins;
        realScore += change;
        addToHistory(`+${(change / DISPLAY_MULTIPLIER).toFixed(8)} CT (Game Win)`);
        showNotification(`You won +${(change / DISPLAY_MULTIPLIER).toFixed(8)} CT`);
        resultText = `You win! üéâ ${playerChoice} beats ${computerChoice}`;
    } else {
        change = -betInCoins;
        realScore = Math.max(0, realScore + change);
        addToHistory(`-${(-change / DISPLAY_MULTIPLIER).toFixed(8)} CT (Game Lose)`);
        showNotification(`You lost ${(-change / DISPLAY_MULTIPLIER).toFixed(8)} CT`);
        resultText = `You lose üòû ${computerChoice} beats ${playerChoice}`;
    }

    localStorage.setItem("score", realScore);
    displayScore(realScore);
    document.getElementById("game-result").innerText = resultText;
    input.value = ""; // –û—á–∏—â–∞–µ–º –ø–æ–ª–µ
}

// === –í—Å–ø–ª—ã–≤–∞—é—â–µ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ ===
function showNotification(message) {
    const notification = document.createElement('div');
    notification.className = 'notification';
    notification.innerText = message;
    document.body.appendChild(notification);

    setTimeout(() => {
        notification.classList.add('show');
    }, 100);

    setTimeout(() => {
        notification.classList.remove('show');
        setTimeout(() => {
            notification.remove();
        }, 300);
    }, 4000);
}

// === –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å—á—ë—Ç–∞ ===
function displayScore(score) {
    document.getElementById("score").innerText = (score / DISPLAY_MULTIPLIER).toFixed(8);
}

// === –ò—Å—Ç–æ—Ä–∏—è ===
let clickHistory = JSON.parse(localStorage.getItem("clickHistory")) || [];

function addToHistory(text) {
    const timestamp = new Date().toLocaleTimeString();
    clickHistory.push(`${timestamp} ‚Äî ${text}`);

    if (clickHistory.length > 50) {
        clickHistory.shift(); // –õ–∏–º–∏—Ç –∏—Å—Ç–æ—Ä–∏–∏
    }

    localStorage.setItem("clickHistory", JSON.stringify(clickHistory));
}

// === –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ –≥–ª–∞–≤–Ω—É—é ===
function goBack() {
    window.location.href = "index.html";
}